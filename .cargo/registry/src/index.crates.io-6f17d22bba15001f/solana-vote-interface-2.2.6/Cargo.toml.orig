[package]
name = "solana-vote-interface"
description = "Solana vote interface."
documentation = "https://docs.rs/solana-vote-interface"
version = "2.2.6"
authors = { workspace = true }
repository = { workspace = true }
homepage = { workspace = true }
license = { workspace = true }
edition = { workspace = true }

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]
all-features = true
rustdoc-args = ["--cfg=docsrs"]

[features]
bincode = [
    "dep:bincode",
    "dep:solana-serialize-utils",
    "dep:solana-system-interface",
    "serde",
]
dev-context-only-utils = [
    "bincode",
    "dep:arbitrary",
    "solana-pubkey/dev-context-only-utils",
]
frozen-abi = [
    "dep:solana-frozen-abi",
    "dep:solana-frozen-abi-macro",
    "serde",
    "solana-hash/frozen-abi",
    "solana-pubkey/frozen-abi",
    "solana-short-vec/frozen-abi",
]
serde = [
    "dep:serde",
    "dep:serde_derive",
    "dep:solana-serde-varint",
    "dep:solana-short-vec",
    "solana-hash/serde",
    "solana-pubkey/serde",
]

[dependencies]
arbitrary = { workspace = true, features = ["derive"], optional = true }
bincode = { workspace = true, optional = true }
num-derive = { workspace = true }
num-traits = { workspace = true }
serde = { workspace = true, optional = true }
serde_derive = { workspace = true, optional = true }
solana-clock = { workspace = true }
solana-decode-error = { workspace = true }
solana-frozen-abi = { workspace = true, features = [
    "frozen-abi",
], optional = true }
solana-frozen-abi-macro = { workspace = true, features = [
    "frozen-abi",
], optional = true }
solana-hash = { workspace = true }
solana-instruction = { workspace = true, features = ["std"] }
solana-pubkey = { workspace = true }
solana-rent = { workspace = true }
solana-sdk-ids = { workspace = true }
solana-serde-varint = { workspace = true, optional = true }
solana-serialize-utils = { workspace = true, optional = true }
solana-short-vec = { workspace = true, optional = true }
solana-system-interface = { workspace = true, features = ["bincode"], optional = true }

[target.'cfg(target_os = "solana")'.dependencies]
solana-serialize-utils = { workspace = true }

[dev-dependencies]
itertools = { workspace = true }
rand = { workspace = true }
solana-epoch-schedule = { workspace = true }
solana-logger = { workspace = true }
solana-pubkey = { workspace = true, features = ["dev-context-only-utils"] }
solana-vote-interface = { path = ".", features = ["dev-context-only-utils"] }

[lints]
workspace = true
