"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è airdrop TAMA —Ç–æ–∫–µ–Ω–æ–≤ –≤ devnet
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python airdrop_tokens.py <–∞–¥—Ä–µ—Å> <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ>
"""

import sys
import json
import subprocess

def load_config():
    """–ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é devnet"""
    try:
        with open('devnet_config.json', 'r') as f:
            return json.load(f)
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª devnet_config.json –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("üí° –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ setup_devnet.ps1")
        sys.exit(1)

def check_balance(token_mint):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å —Ç–æ–∫–µ–Ω–æ–≤"""
    try:
        result = subprocess.run(
            ['spl-token', 'balance', token_mint],
            capture_output=True,
            text=True,
            check=True
        )
        balance = float(result.stdout.strip())
        return balance
    except Exception as e:
        print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å: {e}")
        return None

def transfer_tokens(token_mint, recipient, amount):
    """–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ —Ç–æ–∫–µ–Ω—ã –ø–æ–ª—É—á–∞—Ç–µ–ª—é"""
    try:
        print(f"\n‚ö° –û—Ç–ø—Ä–∞–≤–∫–∞ {amount} TAMA –Ω–∞ {recipient}...")
        
        result = subprocess.run(
            ['spl-token', 'transfer', token_mint, str(amount), recipient],
            capture_output=True,
            text=True,
            check=True
        )
        
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {amount} TAMA!")
        print(f"üìù –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è: {result.stdout.strip()}")
        return True
        
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {e.stderr}")
        return False

def mint_tokens(token_mint, amount):
    """–ó–∞–º–∏–Ω—Ç–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã —Å–µ–±–µ"""
    try:
        print(f"\n‚ö° –ú–∏–Ω—Ç {amount} TAMA...")
        
        result = subprocess.run(
            ['spl-token', 'mint', token_mint, str(amount)],
            capture_output=True,
            text=True,
            check=True
        )
        
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–º–∏–Ω—á–µ–Ω–æ {amount} TAMA!")
        return True
        
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–Ω—Ç–∞: {e.stderr}")
        return False

def main():
    print("üéÅ TAMA Token Airdrop Script")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    if len(sys.argv) < 3:
        print("\nüìñ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("   python airdrop_tokens.py <–∞–¥—Ä–µ—Å> <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ>")
        print("\nüìù –ü—Ä–∏–º–µ—Ä:")
        print("   python airdrop_tokens.py GjW...xyz 1000")
        sys.exit(1)
    
    recipient = sys.argv[1]
    amount = float(sys.argv[2])
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥–∞
    config = load_config()
    token_mint = config.get('tokenMint')
    
    if not token_mint:
        print("‚ùå Token mint –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏!")
        sys.exit(1)
    
    print(f"\nüìã –î–µ—Ç–∞–ª–∏:")
    print(f"   Token: {config.get('name')} ({config.get('symbol')})")
    print(f"   Mint: {token_mint}")
    print(f"   –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")
    print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {amount}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞
    balance = check_balance(token_mint)
    if balance is not None:
        print(f"\nüí∞ –í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {balance} TAMA")
        
        if balance < amount:
            print(f"‚ö†Ô∏è  –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤! –ù—É–∂–Ω–æ –∑–∞–º–∏–Ω—Ç–∏—Ç—å –µ—â–µ {amount - balance}")
            response = input("–ó–∞–º–∏–Ω—Ç–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã? (y/n): ")
            if response.lower() == 'y':
                mint_tokens(token_mint, amount - balance + 100)  # +100 –∑–∞–ø–∞—Å
    
    # –ü–µ—Ä–µ–≤–æ–¥
    success = transfer_tokens(token_mint, recipient, amount)
    
    if success:
        print("\n" + "=" * 50)
        print("‚úÖ AIRDROP –ó–ê–í–ï–†–®–ï–ù!")
        print("=" * 50)
        print(f"\nüîó –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é:")
        print(f"   https://explorer.solana.com/address/{recipient}?cluster=devnet")
    else:
        print("\n‚ùå Airdrop –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω")
        print("\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("   - –£ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –Ω–µ—Ç token account –¥–ª—è TAMA")
        print("   - –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ SOL –¥–ª—è –∫–æ–º–∏—Å—Å–∏–∏")
        print("   - –ù–µ–≤–µ—Ä–Ω—ã–π –∞–¥—Ä–µ—Å")
        print("\nüîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:")
        print(f"   spl-token create-account {token_mint} --owner {recipient}")

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\n‚ö†Ô∏è  –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(0)
    except Exception as e:
        print(f"\n‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)















