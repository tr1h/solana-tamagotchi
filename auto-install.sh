#!/bin/bash

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–µ–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π
export DEBIAN_FRONTEND=noninteractive

echo "üöÄ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –£–°–¢–ê–ù–û–í–ö–ê ANCHOR"
echo "===================================="
echo ""

# 1. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
echo "üì¶ 1/5: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
sudo -E apt-get update -y > /dev/null 2>&1
sudo -E apt-get upgrade -y > /dev/null 2>&1
echo "‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞"

# 2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo ""
echo "üîß 2/5: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
sudo -E apt-get install -y \
    pkg-config \
    build-essential \
    libudev-dev \
    libssl-dev \
    curl \
    git > /dev/null 2>&1
echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# 3. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Rust
echo ""
echo "ü¶Ä 3/5: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Rust..."
if ! command -v rustc &> /dev/null; then
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y > /dev/null 2>&1
    source $HOME/.cargo/env
    echo 'export PATH="$HOME/.cargo/bin:$PATH"' >> ~/.bashrc
    echo "‚úÖ Rust —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(rustc --version)"
else
    echo "‚úÖ Rust —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(rustc --version)"
fi

# 4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Solana CLI
echo ""
echo "‚òÄÔ∏è 4/5: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Solana CLI..."
if ! command -v solana &> /dev/null; then
    sh -c "$(curl -sSfL https://release.solana.com/stable/install)" > /dev/null 2>&1
    export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
    echo 'export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"' >> ~/.bashrc
    echo "‚úÖ Solana —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(~/.local/share/solana/install/active_release/bin/solana --version)"
else
    echo "‚úÖ Solana —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(solana --version)"
fi

# 5. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Anchor
echo ""
echo "‚öì 5/5: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Anchor (—ç—Ç–æ –∑–∞–π–º–µ—Ç ~5-10 –º–∏–Ω—É—Ç)..."
source $HOME/.cargo/env
export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"

if ! command -v anchor &> /dev/null; then
    cargo install --git https://github.com/coral-xyz/anchor avm --locked --force > /tmp/avm-install.log 2>&1
    if [ $? -eq 0 ]; then
        $HOME/.cargo/bin/avm install latest > /tmp/anchor-install.log 2>&1
        $HOME/.cargo/bin/avm use latest > /dev/null 2>&1
        echo "‚úÖ Anchor —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $($HOME/.cargo/bin/anchor --version)"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ AVM. –°–º. /tmp/avm-install.log"
        exit 1
    fi
else
    echo "‚úÖ Anchor —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(anchor --version)"
fi

# 6. –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ bashrc
echo ""
echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
grep -qxF 'export PATH="$HOME/.cargo/bin:$PATH"' ~/.bashrc || echo 'export PATH="$HOME/.cargo/bin:$PATH"' >> ~/.bashrc
grep -qxF 'export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"' ~/.bashrc || echo 'export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"' >> ~/.bashrc

echo ""
echo "‚úÖ –í–°–Å –£–°–¢–ê–ù–û–í–õ–ï–ù–û!"
echo "==================="
echo ""
echo "–í–µ—Ä—Å–∏–∏:"
source $HOME/.cargo/env
export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
echo "  Rust: $(rustc --version 2>/dev/null || echo '–Ω–µ –Ω–∞–π–¥–µ–Ω')"
echo "  Cargo: $(cargo --version 2>/dev/null || echo '–Ω–µ –Ω–∞–π–¥–µ–Ω')"
echo "  Solana: $(solana --version 2>/dev/null || echo '–Ω–µ –Ω–∞–π–¥–µ–Ω')"
echo "  Anchor: $(anchor --version 2>/dev/null || $HOME/.cargo/bin/anchor --version 2>/dev/null || echo '–Ω–µ –Ω–∞–π–¥–µ–Ω')"
echo ""
echo "üéØ –¢–ï–ü–ï–†–¨ –ú–û–ñ–ù–û –°–û–ë–ò–†–ê–¢–¨ –ö–û–ù–¢–†–ê–ö–¢!"
echo ""
echo "–í—ã–ø–æ–ª–Ω–∏:"
echo "  source ~/.bashrc"
echo "  cd /mnt/c/NEW\\ proekt"
echo "  anchor build"
echo ""














